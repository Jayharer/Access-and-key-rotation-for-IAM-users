AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Sam app for access key and console management.


Globals:
  Function:
    Timeout: 60
    Runtime: python3.9

Resources:
  DynamodbAccessKeysTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: "accessKeys"
      AttributeDefinitions:
        - AttributeName: "user_name"
          AttributeType: "S"
        - AttributeName: "key_id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "user_name"
          KeyType: "HASH" # Partition Key
        - AttributeName: "key_id"
          KeyType: "RANGE" # Sort Key
      BillingMode: "PAY_PER_REQUEST" # On-demand pricing
  PinpointApplication:
    Type: AWS::Pinpoint::App
    Properties:
      Name: MyPinpointApp
  EmailChannel:
    Type: AWS::Pinpoint::EmailChannel
    Properties:
      ApplicationId: !Ref PinpointApplication
      FromAddress: jay416505@gmail.com # Use a verified email address from ses
      Identity: arn:aws:ses:us-east-1:861936062471:identity/jay416505@gmail.com
      Enabled: true
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaBasicExecution
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
        - PolicyName: LambdaPinpointPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - mobiletargeting:SendMessages
                  - ses:SendEmail
                Resource: "*"
        - PolicyName: LambdaDynamodbPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:DeleteItem
                Resource: arn:aws:dynamodb:*:*:table/user
        - PolicyName: LambdaIAMPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - iam:GetLoginProfile
                  - iam:ListAccessKeys
                  - iam:ListUsers
                  - iam:ListUserTags
                  - iam:GetUser
                  - iam:CreateAccessKey
                  - iam:DeactivateMFADevice
                  - iam:DeleteAccessKey
                  - iam:DeleteLoginProfile
                  - iam:UpdateLoginProfile
                Resource: arn:aws:iam::*:*
        - PolicyName: LambdaSESPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ses:GetIdentityVerificationAttributes
                  - ses:VerifyEmailIdentity
                Resource: "*"
  ConsoleAccessFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: console_access.app.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
  KeyRotationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: key_rotation.app.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          PINPOINT_APP_ID: !Ref PinpointApplication

Outputs:
  ConsoleAccessFunctionArn:
    Value: !GetAtt ConsoleAccessFunction.Arn
  KeyRotationFunctionArn:
    Value: !GetAtt KeyRotationFunction.Arn
  PinpointApplicationId:
    Value: !Ref PinpointApplication